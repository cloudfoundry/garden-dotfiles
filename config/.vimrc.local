call camelcasemotion#CreateMotionMappings('<leader>')

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Golang
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" Ignore vendor directory
set wildignore+=vendor

" let coc.nvim do code completion and doc lookup
let g:go_code_completion_enabled = 0

autocmd FileType go nunmap <buffer> K

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugin configuration: fzf
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

function s:define_fzf_command()
  " Change wildignore into space or | separated groups
  " e.g. .aux .out .toc .jpg .bmp .gif
  " or   .aux$\|.out$\|.toc$\|.jpg$\|.bmp$\|.gif$
  let pats = ['[*\/]*\([?_.0-9A-Za-z]\+\)\([*\/]*\)\(\\\@<!,\|$\)','\\\@<!,', '\.']
  let subs = ['\1\2\3', '\\|', '\\.']
  let expr = substitute(&wig, pats[0], subs[0], 'g')
  let expr = substitute(expr, pats[1], subs[1], 'g')
  let expr = substitute(expr, pats[2], subs[2], 'g')
  let expr = substitute(expr, '\\,', ',', 'g')

  let $FZF_DEFAULT_COMMAND = 'ag . -U -l --hidden --nocolor -g "" |' .
    \ ' grep -v "' . expr . '"'
endfunction
call s:define_fzf_command()

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugin configuration: deoplete
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

" disable deoplete in favour of coc.nvim
let g:deoplete#enable_at_startup = 0

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Spelling
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

autocmd FileType markdown setlocal spell spelllang=en
autocmd FileType tex setlocal spell spelllang=en
autocmd FileType gitcommit setlocal spell spelllang=en

set nowrap
set noswapfile
set nobackup
set nowb

runtime config/plugin/coc.vim
